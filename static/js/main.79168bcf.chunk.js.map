{"version":3,"sources":["api/index.ts","constants/actions.ts","store/actions.ts","components/Common/SectionHeading/SectionHeading.tsx","components/Markdown/Image/Image.tsx","components/Markdown/Markdown.tsx","components/Common/ProjectRow/ProjectRow.tsx","components/HomeView/HomeView.tsx","components/HomeView/index.ts","components/ProjectView/ProjectView.tsx","components/ProjectView/index.ts","components/Layout/Navigation/MenuItem/MenuItem.tsx","components/Layout/Navigation/Navigation.tsx","components/Layout/Navigation/ProjectHeader/ProjectHeader.tsx","components/Layout/Navigation/HeaderNode/HeaderNode.tsx","components/Layout/Footer/Footer.tsx","components/Layout/Layout.tsx","containers/Container.tsx","store/reducers.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["handleResponse","axiosPromise","a","response","data","Error","api","getSite","apiKey","axios","get","process","ACTION_TYPES","reduce","actions","action","updatedActions","loadingStarted","createAction","START_LOADING","loadingStopped","STOP_LOADING","stopLoading","dispatch","getSiteRequest","GET_SITE","getSiteSuccess","GET_SITE_SUCCESS","getSiteFailure","GET_SITE_FAILURE","error","payload","useStyles","makeStyles","theme","root","color","size","fontWeight","fontSize","palette","secondary","main","primary","marginBottom","breakpoints","down","textAlign","SectionHeading","text","classes","Typography","className","variant","useStylesImage","display","margin","maxHeight","maxWidth","caption","fontFamily","Image","alt","src","title","Markdown","props","renderers","image","position","paper","width","paddingTop","bottom","logoContainer","alignItems","name","description","tags","link","ProjectRow","project","Grid","container","spacing","item","xs","sm","logo","url","md","headline","component","source","tldr","Link","RouteLink","to","slug","grid","body1","lineHeight","whiteSpace","currently","location","letterSpacing","locationImageContainer","locationImage","locationImageCaption","centerMobile","lottieContainer","flexDirection","yarnWrapper","flexGrow","height","up","backgroundColor","borderRadius","HomeView","site","matches","useMediaQuery","projects","flocks","find","flock","homePage","pages","page","useState","options","setOptions","React","useEffect","loop","autoplay","path","lottie","rendererSettings","preserveAspectRatio","about","landing","direction","heading","isStopped","isPaused","map","id","paragraph","justify","city","marginTop","subItem","marginLeft","borderLeft","content","tools","textTransform","ProjectView","projectSlug","useParams","p","Helmet","property","referrerPolicy","List","ListItem","href","escapeHtml","introduction","requirements","architecture","wireframes_ui","textDecoration","opacity","MenuItem","exact","useLink","linkProps","boxShadow","shadows","toolbar","padding","minHeight","linksContainer","listStyle","Navigation","resume","pathname","useLocation","AppBar","Toolbar","Hidden","smUp","IconButton","edge","aria-label","xsDown","target","header_color","paddingBottom","ProjectHeader","navigation","HeaderNode","render","overflow","contrastText","paddingLeft","paddingRight","light","list","icon","minWidth","powered","justifyContent","marginRight","poweredByLink","Footer","email","github","instagram","fixed","ListItemIcon","ListItemText","disableTypography","rel","backdrop","zIndex","drawer","visibility","loading","defaultOptions","Layout","children","footer","window","scrollTo","Backdrop","open","transitionDuration","appear","enter","exit","Container","useDispatch","useSelector","state","startLoading","setTimeout","siteByKey","then","portfolio","rootReducer","createReducer","builder","addCase","_","addDefaultCase","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","combineReducers","reducers","store","configureStore","reducer","middleware","thunk","logger","persistor","persistStore","createMuiTheme","background","default","dark","typography","App","CssBaseline","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79168bcf.chunk.js","sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { ISite } from '../interfaces';\n\nasync function handleResponse(axiosPromise: AxiosPromise) {\n  try {\n    const response = await axiosPromise;\n    return response.data;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nconst api = {\n  async getSite(apiKey: string): Promise<{ data: { siteByKey: ISite } }> {\n    return handleResponse(\n      axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}?query=query SiteQuery($apiKey: String!) { siteByKey(apiKey: $apiKey) { id name slug pages { id name slug data } flocks { id name slug data } } }&operationName=SiteQuery&variables={\"apiKey\": \"${apiKey}\"}`,\n      ),\n    );\n  },\n};\n\nexport default api;\n","const ACTIONS = [\n  'GET_SITE',\n  'GET_SITE_SUCCESS',\n  'GET_SITE_FAILURE',\n\n  'START_LOADING',\n  'STOP_LOADING',\n];\n\nconst ACTION_TYPES = ACTIONS.reduce(\n  (actions: { [key: string]: string }, action) => {\n    const updatedActions = actions;\n    updatedActions[action] = action;\n    return updatedActions;\n  },\n  {},\n);\n\nexport default ACTION_TYPES;\n","import { createAction } from '@reduxjs/toolkit';\nimport api from '../api';\nimport ACTION_TYPES from '../constants/actions';\n\nimport { ISite } from '../interfaces';\nimport { AppDispatch } from '.';\n\nfunction handleFailureAndErrors(error: any) {\n  return {\n    payload: error,\n  };\n}\n\nconst loadingStarted = createAction(ACTION_TYPES.START_LOADING);\nexport function startLoading() {\n  return (dispatch: AppDispatch): boolean => {\n    dispatch(loadingStarted());\n    return true;\n  };\n}\n\nconst loadingStopped = createAction(ACTION_TYPES.STOP_LOADING);\nexport function stopLoading() {\n  return (dispatch: AppDispatch): boolean => {\n    dispatch(loadingStopped());\n    return false;\n  };\n}\n\nconst getSiteRequest = createAction(ACTION_TYPES.GET_SITE);\nconst getSiteSuccess = createAction<ISite>(ACTION_TYPES.GET_SITE_SUCCESS);\nconst getSiteFailure = createAction(\n  ACTION_TYPES.GET_SITE_FAILURE,\n  handleFailureAndErrors,\n);\nexport function getSite(apiKey: string) {\n  return async (dispatch: AppDispatch): Promise<ISite> => {\n    dispatch(getSiteRequest);\n    try {\n      const {\n        data: { siteByKey: data },\n      } = await api.getSite(apiKey);\n      dispatch(getSiteSuccess(data));\n      return data;\n    } catch (error) {\n      dispatch(getSiteFailure(error));\n      return error;\n    }\n  };\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Theme, Typography } from '@material-ui/core';\n\nexport type TSectionHeadingProps = {\n  text: string;\n  color?: 'primary' | 'secondary';\n  size?: string;\n};\n\nconst useStyles = makeStyles<\nTheme,\nPick<TSectionHeadingProps, 'color' | 'size'>\n>((theme) => ({\n  root: ({ color, size }) => ({\n    fontWeight: 900,\n    fontSize: size,\n    color:\n      color === 'secondary'\n        ? theme.palette.secondary.main\n        : theme.palette.primary.main,\n    marginBottom: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n    },\n  }),\n}));\n\nconst SectionHeading = ({\n  text,\n  color = 'secondary',\n  size = '48px',\n}: TSectionHeadingProps) => {\n  const classes = useStyles({ color, size });\n  return (\n    <Typography className={classes.root} variant=\"h2\">\n      {text}\n    </Typography>\n  );\n};\n\nexport default SectionHeading;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport type TImageProps = {\n  alt: string;\n  src: string;\n  title: string;\n};\n\nconst useStylesImage = makeStyles({\n  root: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '2rem 0',\n    '& > img': {\n      maxHeight: '100%',\n      maxWidth: '100%',\n    },\n  },\n  caption: {\n    display: 'block',\n    color: '#6e6e6e',\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontWeight: 300,\n  },\n});\n\nconst Image = ({ alt, src, title }: TImageProps) => {\n  const classes = useStylesImage();\n  return (\n    <span className={classes.root}>\n      <img alt={alt} src={src} />\n      <span className={classes.caption}>{title}</span>\n    </span>\n  );\n};\n\nexport default Image;\n","import React from 'react';\n\nimport ReactMarkdown from 'react-markdown';\n\nimport Image from './Image/Image';\n\nconst Markdown = (props: any) => {\n  const renderers = {\n    image: Image,\n  };\n\n  return <ReactMarkdown renderers={renderers} {...props} />;\n};\n\nexport default Markdown;\n","import React from 'react';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Grid, Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { IProject } from '../../../interfaces';\nimport Markdown from '../../Markdown/Markdown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: '2rem',\n    position: 'relative',\n    '& > div': {\n      // [theme.breakpoints.up('sm')]: {\n      //   padding: theme.spacing(4),\n      // },\n      // [theme.breakpoints.down('xs')]: {\n      //   padding: theme.spacing(4),\n      // },\n    },\n  },\n  paper: {\n    width: '100%',\n    paddingTop: '100%',\n    [theme.breakpoints.down('xs')]: {\n      paddingTop: '40%',\n      bottom: 32,\n    },\n    backgroundColor: theme.palette.secondary.main,\n  },\n  logoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  name: {\n    fontSize: '36px',\n    marginBottom: '1rem',\n  },\n  description: {\n    fontSize: '16px',\n    marginBottom: '1.5rem',\n  },\n  tags: {\n    fontSize: '14px',\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontWeight: 800,\n  },\n  link: {\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontWeight: 900,\n    fontSize: '18px',\n  },\n}));\n\nconst ProjectRow = (project: IProject) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container spacing={8}>\n      <Grid className={classes.logoContainer} item xs={12} sm={2}>\n        <img src={project?.logo?.url} alt={project?.name} />\n      </Grid>\n      <Grid item xs={12} md={10}>\n        <Typography className={classes.name} variant=\"h4\">\n          {project.name}\n        </Typography>\n        <Typography className={classes.description} variant=\"body1\">\n          {project.headline}\n        </Typography>\n        <Typography\n          className={classes.description}\n          variant=\"body1\"\n          component=\"div\"\n        >\n          <Markdown source={`tldr; ${project.tldr}`} />\n        </Typography>\n        <Typography className={classes.tags}>{project.tags}</Typography>\n        <Link\n          component={RouteLink}\n          className={classes.link}\n          to={`/projects/${project.slug}`}\n          color=\"secondary\"\n        >\n          Read More +\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProjectRow;\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Lottie from 'lottie-web-react';\n\nimport { ISite, ILottieOptions, IProject } from '../../interfaces';\n\nimport SectionHeading from '../Common/SectionHeading/SectionHeading';\n// import OutlinedButton from '_/components/Common/OutlinedButton/OutlinedButton';\nimport ProjectRow from '../Common/ProjectRow/ProjectRow';\n\nexport type THomeViewProps = {\n  site: ISite | null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    marginBottom: '4rem',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: '7rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: '8rem',\n    },\n  },\n  body1: {\n    lineHeight: 1.5,\n    whiteSpace: 'pre-wrap',\n    fontSize: '24px',\n    marginBottom: '2rem',\n  },\n  currently: {\n    fontWeight: 300,\n    fontSize: '24px',\n    marginBottom: '1rem',\n  },\n  location: {\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontWeight: 800,\n    fontSize: '36px',\n    letterSpacing: '0.3em',\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: '2rem',\n      fontSize: '28px',\n      textAlign: 'center',\n    },\n  },\n  locationImageContainer: {\n    textAlign: 'center',\n  },\n  locationImage: {\n    maxWidth: '100%',\n    maxHeight: '208px',\n  },\n  locationImageCaption: {\n    fontSize: '18px',\n    fontWeight: 300,\n  },\n  centerMobile: {\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      width: '100%',\n    },\n  },\n  lottieContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  yarnWrapper: {\n    flexGrow: 1,\n    '& > div.string': {\n      [theme.breakpoints.down('md')]: {\n        height: '100px',\n      },\n      content: '\"\"',\n      width: '1.5px',\n      backgroundColor: '#272b3e',\n      height: '100%',\n      margin: 'auto',\n      [theme.breakpoints.up('md')]: {\n        margin: '-9rem auto 0 auto',\n      },\n    },\n    '& > div.blue-ball': {\n      backgroundColor: '#272b3e',\n      borderRadius: '50%',\n      height: '50px',\n      width: '50px',\n      position: 'relative',\n      margin: 'auto',\n    },\n  },\n}));\n\nconst HomeView = ({ site }: THomeViewProps) => {\n  // useDispatch to get home page\n  const matches = useMediaQuery('(max-width:959px)');\n  const classes = useStyles();\n  const projects = (site?.flocks.find((flock) => flock.slug === 'portfolio')\n    ?.data as IProject[]) || [];\n  const homePage = site?.pages.find((page) => page.slug === 'home');\n  const [options, setOptions] = useState<ILottieOptions | null>(null);\n\n  React.useEffect(() => {\n    setOptions({\n      loop: true,\n      autoplay: true,\n      path: homePage?.data.lottie,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice',\n      },\n    });\n  }, [homePage]);\n\n  // add Layout here\n  const { about, landing, location } = homePage?.data || {};\n  return (\n    <>\n      {/* Intro */}\n      <Grid\n        container\n        direction={matches ? 'column' : 'row'}\n        className={classes.grid}\n        spacing={2}\n      >\n        <Grid item xs={12} md={8}>\n          <SectionHeading text={landing?.heading || ''} />\n          <Typography className={classes.body1}>\n            {landing?.description}\n          </Typography>\n          {/* <div className={classes.centerMobile}>\n            <OutlinedButton text=\"look at my stuff\" />\n          </div> */}\n        </Grid>\n        <Grid className={classes.lottieContainer} item md={3} xs={12}>\n          <div className={classes.yarnWrapper}>\n            <div className=\"string\" />\n            <div className=\"blue-ball\" />\n          </div>\n          <Lottie\n            options={options}\n            height={300}\n            width={300}\n            isStopped={false}\n            isPaused={false}\n          />\n        </Grid>\n      </Grid>\n      {/* Project Section */}\n      <Grid container className={classes.grid} spacing={2}>\n        <Grid item xs={12} sm={10} md={6}>\n          <SectionHeading text=\"projects\" />\n          <Typography className={classes.body1}>\n            My experience in software engineering has mainly focused on internal\n            tools that speed up daily activities.\n          </Typography>\n        </Grid>\n        <Grid item sm={12}>\n          {projects.map((project) => (\n            <ProjectRow key={project.id} {...project} />\n          ))}\n          {/* <div className={classes.centerMobile}>\n            <OutlinedButton text=\"view all of my projects\" />\n          </div> */}\n        </Grid>\n      </Grid>\n      {/* About Section */}\n      <Grid id=\"about\" container className={classes.grid} spacing={2}>\n        <Grid item md={8} xs={12}>\n          <SectionHeading text={about?.heading || ''} />\n          <Typography className={classes.body1}>{about?.paragraph}</Typography>\n        </Grid>\n        <Grid className={classes.lottieContainer} item md={4} sm={6} xs={12}>\n          <Lottie\n            options={options}\n            height={300}\n            width={300}\n            isStopped={false}\n            isPaused={false}\n          />\n        </Grid>\n      </Grid>\n      {/* Location */}\n      <Grid container className={classes.grid} justify=\"center\">\n        <Grid container item sm={5} xs={12} alignItems=\"center\">\n          <div className={classes.centerMobile}>\n            <Typography\n              className={`${classes.body1} ${classes.currently}`}\n              component=\"p\"\n            >\n              currently situated in\n            </Typography>\n            <Typography variant=\"h5\" className={classes.location}>\n              {location?.city}\n            </Typography>\n          </div>\n        </Grid>\n        <Grid className={classes.locationImageContainer} item sm={5} xs={12}>\n          <img\n            className={classes.locationImage}\n            src={location?.image?.url}\n            alt={location?.city}\n          />\n          <Typography className={classes.locationImageCaption}>\n            {location?.caption}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default HomeView;\n","import HomeView from './HomeView';\n\nexport default HomeView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useParams } from 'react-router-dom';\n\nimport { Helmet } from 'react-helmet';\n\nimport {\n  Grid, Link, List, ListItem, Typography,\n} from '@material-ui/core';\nimport Markdown from '../Markdown/Markdown';\nimport SectionHeading from '../Common/SectionHeading/SectionHeading';\n\nimport { IProject } from '../../interfaces';\n\nexport type TProjectContainerProps = {\n  projects?: IProject[];\n};\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: '4rem',\n  },\n  logo: {\n    marginTop: '-2rem',\n  },\n  item: {\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    color: '#696b74',\n    '& > a': {\n      color: 'inherit',\n    },\n  },\n  subItem: {\n    marginLeft: '1rem',\n    borderLeft: '4px solid #ececec',\n  },\n  content: {\n    fontSize: '16px',\n    lineHeight: '30px',\n    whiteSpace: 'break-spaces',\n    '& > div': {\n      marginTop: '4rem',\n    },\n  },\n  tools: {\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontSize: '16px',\n    fontWeight: 500,\n    textTransform: 'uppercase',\n  },\n});\n\nconst ProjectView = ({ projects }: TProjectContainerProps) => {\n  const classes = useStyles();\n  const { projectSlug } = useParams<{ projectSlug: string }>();\n  const project = projects?.find((p) => p.slug === projectSlug);\n\n  if (!project) {\n    return <div />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Kevin Cunanan | Portfolio | ${project?.name}`}</title>\n        <meta\n          property=\"og:title\"\n          content={`Kevin Cunanan | Portfolio | ${project?.name}`}\n        />\n        <meta property=\"og:description\" content={project?.headline} />\n        <meta property=\"og:image\" content={project?.logo?.url} />\n        <meta property=\"og:url\" content={`/projects/${project?.slug}`} />\n        <meta\n          name=\"twitter:image:alt\"\n          content={`${project?.name} Application Logo`}\n        />\n\n        <meta\n          property=\"og:site_name\"\n          content=\"Kevin Cunanan | Software Engineer Portfolio\"\n        />\n      </Helmet>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12} sm={3}>\n          <img\n            className={classes.logo}\n            src={project?.logo?.url}\n            alt={project?.name}\n            referrerPolicy=\"no-referrer\"\n          />\n          <List>\n            <ListItem className={classes.item}>\n              <Link href=\"#overview\">Project Overview</Link>\n            </ListItem>\n            <ListItem className={classes.item}>\n              <Link href=\"#introduction\">Introduction</Link>\n            </ListItem>\n            <ListItem className={classes.item}>\n              <Link href=\"#requirements\">Requirements</Link>\n            </ListItem>\n            <ListItem className={classes.item}>\n              <Link href=\"#architecture\">Architecture</Link>\n            </ListItem>\n            <ListItem className={`${classes.item} ${classes.subItem}`}>\n              <Link href=\"#backend\">Backend</Link>\n            </ListItem>\n            <ListItem className={`${classes.item} ${classes.subItem}`}>\n              <Link href=\"#frontend\">Frontend</Link>\n            </ListItem>\n            <ListItem className={`${classes.item} ${classes.subItem}`}>\n              <Link href=\"#aws\">AWS Architecture</Link>\n            </ListItem>\n            <ListItem className={`${classes.item} ${classes.subItem}`}>\n              <Link href=\"#ci+cd\">\n                Continuous Integration / Continuous Delivery\n              </Link>\n            </ListItem>\n            <ListItem className={classes.item}>\n              <Link href=\"#ui\">UI</Link>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid className={classes.content} item xs={12} sm={9}>\n          <div id=\"overview\" />\n          <SectionHeading text=\"Project Overview\" size=\"36px\" />\n          <Markdown source={project?.tldr} escapeHtml={false} />\n\n          <div id=\"tools\" />\n          <Typography className={classes.tools}>Tools Used</Typography>\n          <Markdown source={project?.tools} escapeHtml={false} />\n\n          <div id=\"introduction\" />\n          <SectionHeading text=\"Introduction\" size=\"36px\" />\n          <Markdown source={project?.introduction} escapeHtml={false} />\n\n          <div id=\"requirements\" />\n          <SectionHeading text=\"Requirements\" size=\"36px\" />\n          <Markdown source={project?.requirements} escapeHtml={false} />\n\n          <div id=\"architecture\" />\n          <SectionHeading text=\"Architecture\" size=\"36px\" />\n          <Markdown source={project?.architecture} escapeHtml={false} />\n\n          <div id=\"ui\" />\n          <SectionHeading text=\"UI\" size=\"36px\" />\n          <Markdown source={project?.wireframes_ui} escapeHtml={false} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProjectView;\n","import ProjectView from './ProjectView';\n\nexport default ProjectView;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport { Link, Theme } from '@material-ui/core';\n\nexport type TMenuItemProps = {\n  text: string;\n  link?: string;\n  exact?: boolean;\n  useLink?: boolean;\n  linkProps?: any;\n};\n\nconst useStyles = makeStyles<Theme, Pick<TMenuItemProps, 'text'>>({\n  root: ({ text }) => ({\n    width: '150px',\n    textTransform: 'uppercase',\n    fontSize: '18px',\n    textAlign: 'center',\n    '& > a': {\n      '&:first-child': {\n        marginLeft: 0,\n      },\n      margin: '0 25px',\n      textDecoration: 'none',\n      color: 'inherit',\n      '&.active': {\n        color: 'inherit',\n        fontWeight: 800,\n        content: `\"${text}\"`,\n      },\n    },\n    '&:hover a': {\n      opacity: 0,\n    },\n    '&:hover::before': {\n      position: 'absolute',\n      fontWeight: 800,\n      content: `\"${text}\"`,\n    },\n  }),\n});\n\nconst MenuItem = ({\n  link,\n  text,\n  exact = false,\n  useLink = false,\n  linkProps,\n}: TMenuItemProps) => {\n  const classes = useStyles({ text });\n\n  return (\n    <li className={classes.root}>\n      {useLink ? (\n        <Link {...linkProps}>{text}</Link>\n      ) : (\n        <NavLink to={link} exact={exact} {...linkProps}>\n          {text}\n        </NavLink>\n      )}\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar, Hidden, IconButton, Toolbar,\n} from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from './MenuItem/MenuItem';\nimport { TFile } from '../../../interfaces';\n\nexport type TNavigationProps = {\n  resume?: TFile;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: theme.shadows[0],\n    color: 'inherit',\n    backgroundColor: 'inherit',\n  },\n  toolbar: {\n    padding: 0,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: '130px',\n    },\n  },\n  linksContainer: {\n    padding: 0,\n    listStyle: 'none',\n    fontFamily: '\"Merriweather Sans\", \"Helvetica\"',\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      width: '55%',\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '40%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '30%',\n    },\n  },\n}));\n\nconst Navigation = ({ resume }: TNavigationProps) => {\n  const classes = useStyles();\n  const { pathname } = useLocation();\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        <Hidden smUp>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden xsDown>\n          <ul className={classes.linksContainer}>\n            <MenuItem text=\"Home\" link=\"/\" exact />\n            <MenuItem text=\"Projects\" link=\"/projects/float\" />\n            <MenuItem text=\"Contact\" useLink linkProps={{ href: '#contact' }} />\n            {pathname === '/' ? (\n              <MenuItem\n                text=\"About\"\n                useLink\n                linkProps={{\n                  href: '/#about',\n                }}\n              />\n            ) : null}\n            {resume?.url ? (\n              <MenuItem\n                text=\"Resume\"\n                useLink\n                linkProps={{\n                  href: resume?.url,\n                  target: '_blank',\n                }}\n              />\n            ) : null}\n          </ul>\n        </Hidden>\n        <div />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","import { ReactNode } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Container, Theme, Typography } from '@material-ui/core';\nimport { IProject } from '../../../../interfaces';\n\nexport type TProjectHeaderProps = {\n  navigation: ReactNode;\n  projects: IProject[];\n};\n\nconst useStyles = makeStyles<Theme, IProject>({\n  root: ({ header_color }) => ({\n    backgroundColor: header_color,\n    color: '#fff',\n  }),\n  container: {\n    paddingBottom: '4rem',\n  },\n  name: {\n    fontWeight: 600,\n    fontSize: '36px',\n    margin: '1rem 0',\n  },\n  heading: {\n    fontWeight: 300,\n    fontSize: '20px',\n    letterSpacing: '6px',\n  },\n  headline: {\n    fontWeight: 300,\n    fontSize: '14px',\n  },\n});\n\nconst ProjectHeader = ({ navigation, projects }: TProjectHeaderProps) => {\n  const { projectSlug } = useParams<{ projectSlug: string }>();\n  const project = projects?.find((p) => p.slug === projectSlug);\n  const classes = useStyles(project!);\n\n  return (\n    <div className={classes.root}>\n      <Container className={classes.container}>\n        {navigation}\n        <Typography className={classes.heading}>projects</Typography>\n        <Typography className={classes.name}>{project?.name}</Typography>\n        <Typography className={classes.headline}>\n          {project?.headline}\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default ProjectHeader;\n","import React from 'react';\n\nimport { Container } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport ProjectHeader from '../ProjectHeader/ProjectHeader';\n\nimport { IProject } from '../../../../interfaces';\n\nexport type THeaderNodeProps = {\n  projects: IProject[];\n};\n\nconst HeaderNode = ({ projects }: THeaderNodeProps) => (\n  <Switch>\n    <Route\n      path=\"/projects/:projectSlug\"\n      name=\"projects\"\n      render={() => (\n        <ProjectHeader projects={projects} navigation={<Navigation />} />\n      )}\n    />\n    <Route\n      exact\n      path=\"/\"\n      render={() => (\n        <Container>\n          <Navigation />\n        </Container>\n      )}\n    />\n  </Switch>\n);\n\nexport default HeaderNode;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Container,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\n\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nimport SectionHeading from '../../Common/SectionHeading/SectionHeading';\n\nexport type TFooterProps = {\n  heading?: string;\n  paragraph?: string;\n  email?: string;\n  github?: string;\n  instagram?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: '3rem',\n    paddingBottom: '3rem',\n    overflow: 'auto',\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n  },\n  body1: {\n    lineHeight: '47px',\n    whiteSpace: 'pre-wrap',\n    fontSize: '24px',\n    marginBottom: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n    },\n  },\n  link: {\n    '& > a': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n    '& > a:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  list: {\n    padding: 0,\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    fontWeight: 800,\n    fontSize: '18px',\n  },\n  icon: {\n    minWidth: '40px',\n  },\n  powered: {\n    display: 'flex',\n    fontFamily: '\"Merriweather Sans\", sans-serif',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: 800,\n    '& img': {\n      height: '75px',\n      marginRight: '1rem',\n    },\n  },\n  poweredByLink: {\n    color: 'inherit',\n    marginLeft: '5px',\n  },\n}));\n\nconst Footer = ({\n  heading = '',\n  paragraph = '',\n  email = '',\n  github = '',\n  instagram = '',\n}: TFooterProps) => {\n  const classes = useStyles();\n\n  return (\n    <div id=\"contact\" className={classes.root}>\n      <Container fixed component=\"footer\">\n        <SectionHeading color=\"primary\" text={heading || ''} />\n        <Grid container spacing={8}>\n          <Grid item sm={8}>\n            <Typography className={classes.body1}>{paragraph}</Typography>\n          </Grid>\n          <Grid item sm={4}>\n            <List className={classes.list}>\n              <ListItem>\n                <ListItemIcon className={classes.icon}>\n                  <MailOutlineIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText disableTypography primary={email} />\n              </ListItem>\n              {github && (\n                <ListItem>\n                  <ListItemIcon className={classes.icon}>\n                    <GitHubIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    className={classes.link}\n                    disableTypography\n                    primary={(\n                      <a\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={`https://github.com/${github}`}\n                      >\n                        {github}\n                      </a>\n                    )}\n                  />\n                </ListItem>\n              )}\n              {instagram && (\n                <ListItem>\n                  <ListItemIcon className={classes.icon}>\n                    <InstagramIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    className={classes.link}\n                    disableTypography\n                    primary={(\n                      <a\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={`https://instagram.com/${instagram}`}\n                      >\n                        {instagram}\n                      </a>\n                    )}\n                  />\n                </ListItem>\n              )}\n            </List>\n          </Grid>\n        </Grid>\n        <div className={classes.powered}>\n          <a\n            href=\"https://github.com/ukiyodigital/float\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img\n              src=\"https://float-static.s3-us-west-2.amazonaws.com/media/float-logo.png\"\n              alt=\"Powered by Float\"\n            />\n          </a>\n          {'Powered by '}\n          <a\n            className={classes.poweredByLink}\n            href=\"https://github.com/ukiyodigital/float\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Float\n          </a>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { ReactNode, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop, Container, Theme } from '@material-ui/core';\nimport Lottie from 'lottie-web-react';\n\nimport HeaderNode from './Navigation/HeaderNode/HeaderNode';\nimport Footer, { TFooterProps } from './Footer/Footer';\nimport { IPage, IProject } from '../../interfaces';\n\nexport type TLayoutProps = {\n  children: ReactNode;\n  loading: boolean;\n  footer?: IPage;\n  projects: IProject[];\n};\n\nconst useStyles = makeStyles<Theme, Pick<TLayoutProps, 'loading'>>((theme) => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.light,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  container: ({ loading }) => ({\n    visibility: loading ? 'hidden' : 'initial',\n  }),\n  lottieContainer: {\n    height: '300px',\n    width: '300px',\n  },\n}));\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  path: 'https://assets8.lottiefiles.com/packages/lf20_cHA3rG.json',\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nconst Layout = ({\n  children, loading, footer, projects,\n}: TLayoutProps) => {\n  const classes = useStyles({ loading });\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <div className={classes.root}>\n      <Backdrop\n        open={loading}\n        transitionDuration={{\n          appear: 0,\n          enter: 500,\n          exit: 500,\n        }}\n        className={classes.backdrop}\n      >\n        <div className={classes.lottieContainer}>\n          <Lottie\n            options={defaultOptions}\n            height={300}\n            width={300}\n            isStopped={false}\n            isPaused={false}\n          />\n        </div>\n      </Backdrop>\n      <div className={classes.container}>\n        <HeaderNode projects={projects} />\n        <Container fixed>{children as any}</Container>\n        <Footer {...({ ...footer?.data } as TFooterProps)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport {\n  useLocation, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { AppStoreState } from '../store';\nimport { getSite, startLoading, stopLoading } from '../store/actions';\nimport HomeView from '../components/HomeView';\nimport ProjectView from '../components/ProjectView';\nimport Layout from '../components/Layout/Layout';\n\nimport { IProject } from '../interfaces';\n\nconst Container = () => {\n  const dispatch = useDispatch();\n  const { REACT_APP_FLOAT_KEY: apiKey = '' } = process.env;\n  const site = useSelector((state: AppStoreState) => state.site);\n  const location = useLocation();\n\n  useEffect(() => {\n    startLoading()(dispatch);\n    if (!site) {\n      getSite(apiKey)(dispatch).then(() => {\n        stopLoading()(dispatch);\n      });\n    } else {\n      setTimeout(() => {\n        stopLoading()(dispatch);\n      }, 1000);\n    }\n  }, [apiKey, dispatch, site, location]);\n\n  const footer = site?.pages.find((page) => page.slug === 'footer');\n  const portfolio = site?.flocks.find((flock) => flock.slug === 'portfolio');\n  const loading = useSelector((state: AppStoreState) => state.loading);\n  const projects: IProject[] = (portfolio?.data as IProject[]) || [];\n\n  return (\n    <>\n      <Helmet>\n        <title>Kevin Cunanan | Portfolio</title>\n        <meta property=\"og:title\" content=\"Kevin Cunanan | Portfolio\" />\n        <meta property=\"og:description\" content=\"Software Engineer Portfolio\" />\n        <meta\n          property=\"og:image\"\n          content=\"https://float-static.s3-us-west-2.amazonaws.com/media/kevin-cunanan-github.jpg\"\n        />\n        <meta property=\"og:url\" content=\"https://cunanan.dev\" />\n        <meta name=\"twitter:image:alt\" content=\"Kevin Cunanan | GitHub HQ\" />\n\n        <meta\n          property=\"og:site_name\"\n          content=\"Kevin Cunanan | Software Engineer Portfolio\"\n        />\n      </Helmet>\n      <Layout loading={loading} footer={footer} projects={projects}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <HomeView site={site} />} />\n          <Route\n            exact\n            path=\"/projects/:projectSlug\"\n            render={() => <ProjectView projects={projects} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Layout>\n    </>\n  );\n};\n\nexport default Container;\n","import { createReducer, PayloadAction } from '@reduxjs/toolkit';\nimport ACTION_TYPES from '../constants/actions';\nimport { ISite } from '../interfaces';\n\nconst rootReducer = {\n  site: createReducer<ISite | null>(null, (builder) => {\n    builder\n      .addCase(\n        ACTION_TYPES.GET_SITE_SUCCESS,\n        (_, action: PayloadAction<ISite>) => action.payload,\n      )\n      .addDefaultCase((state) => state);\n  }),\n  loading: createReducer(false, (builder) => {\n    builder\n      .addCase(ACTION_TYPES.START_LOADING, () => true)\n      .addCase(ACTION_TYPES.STOP_LOADING, () => false)\n      .addDefaultCase((state) => state);\n  }),\n};\n\nexport default rootReducer;\n","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport reducers from './reducers';\n\nconst persistConfig = {\n  key: 'white-elephant',\n  storage,\n  whitelist: ['site'],\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  combineReducers(reducers),\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk, logger],\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppGetState = typeof store.getState;\nexport type AppStoreState = ReturnType<typeof store.getState>;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport ReactGA from 'react-ga';\nimport { CssBaseline } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport Container from './containers/Container';\n\nimport store, { persistor } from './store';\n\nconst { REACT_APP_TRACKING_ID } = process.env;\n\nif (REACT_APP_TRACKING_ID) {\n  ReactGA.initialize(REACT_APP_TRACKING_ID);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: 'fff',\n    },\n    primary: {\n      light: '#ffffff',\n      main: '#fff',\n      dark: '#b2b2b2',\n      contrastText: '#32384C',\n    },\n    secondary: {\n      light: '#5b5f6f',\n      main: '#32384C',\n      dark: '#232735',\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    fontFamily:\n      '\"Merriweather\", \"Merriweather Sans\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n});\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <div className=\"App\">\n            <CssBaseline />\n            <ThemeProvider theme={theme}>\n              <Container />\n            </ThemeProvider>\n          </div>\n        </PersistGate>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}